return {
  [[-nargs=1 -bar -complete=customlist,CfgList Cfg e ~/.config/nvim/<args>]],
  [[-nargs=1 Grep silent grep <args>]],
  [[-nargs=* Term 12split | term <args>]],
  [[     LoadLocalCfg if filereadable('.nvimrc') | so .nvimrc | endif]],
  [[-bar SetProjRoot let w:proj_root = fnamemodify(finddir('.git/..', expand('%:p:h').';'), ':p')]],
  [[-bar CdProjRoot SetProjRoot | exe 'cd' w:proj_root]],
  [[     Gdiff SetProjRoot | exe 'silent !cd '.w:proj_root.' && git show HEAD^:'.luaeval('require"util".ProjRelativePath()').' > /tmp/gdiff' | diffs /tmp/gdiff]],
  [[     JumpToLastLocation let b:pos = line('''"') | if b:pos && b:pos <= line('$') | exe b:pos | endif]],
  [[-bar TrimTrailingSpace silent norm m':%s/[<Space><Tab><C-v><C-m>]\+$//e<NL>'']],
  [[-bar TrimTrailingBlankLines %s#\($\n\s*\)\+\%$##e]],
  [[-bar -range=% SquashBlankLines <line1>,<line2>s/\(\n\)\{3,}/\1\1/e]],
  [[-bar -range=% TrimBlankLines <line1>,<line2>s/\(\n\)\{2,}/\1/e]],
  [[     SaveAndClose up | bdel]],
  [[     LastWindow if (&buftype ==# 'quickfix' || &buftype ==# 'terminal' || &filetype ==# 'netrw') && winbufnr(2) ==# -1 | q | endif]],
  [[-bar Scratchify setl nobl bt=nofile bh=delete noswf]],
  [[-bar Scratch <mods> new +Scratchify]],
  [[-bar AutoWinHeight silent exe max([min([line('$'), 12]), 1]).'wincmd _']],
  [[-bar AutoIndent silent norm gg=G`.]],
  [[-bar LspCapabilities lua require'util'.LspCapabilities()]],
  [[     PlugUpdate silent exe '! cd' stdpath('config').'/pack && git submodule foreach git pull']],
  [[     HiFix lua require'util'.hi(require'config'.highlight)]],
  [[-range JQ <line1>,<line2>!jq .]],
}
